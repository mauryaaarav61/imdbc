{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\imdb\\\\IMDB-clone-ReactApp\\\\src\\\\components\\\\movieList\\\\movieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useParams } from \"react-router-dom\";\nimport Cards from \"../cards/card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieListContainer = styled.div`\n  padding: 0 1rem 3rem 1rem;\n\n  @media (min-width: 768px) {\n    padding: 0 3rem 3rem 3rem;\n  }\n`;\n_c = MovieListContainer;\nconst ListTitle = styled.h2`\n  font-size: 1.75rem;\n  margin: 2.5rem;\n`;\n_c2 = ListTitle;\nconst ListCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n_c3 = ListCards;\nconst MovieList = () => {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n  const {\n    type\n  } = useParams();\n  useEffect(() => {\n    getData();\n  }, [type]);\n  const getData = () => {\n    fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`).then(res => res.json()).then(data => setMovieList(data.results));\n  };\n  return /*#__PURE__*/_jsxDEV(MovieListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ListTitle, {\n      children: (type ? type : \"POPULAR\").toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListCards, {\n      children: movieList.map(movie => /*#__PURE__*/_jsxDEV(Cards, {\n        movie: movie\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"K9YPr7ge80KF3ClW6JmF1JZ1KXU=\", false, function () {\n  return [useParams];\n});\n_c4 = MovieList;\nexport default MovieList;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MovieListContainer\");\n$RefreshReg$(_c2, \"ListTitle\");\n$RefreshReg$(_c3, \"ListCards\");\n$RefreshReg$(_c4, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","styled","useParams","Cards","jsxDEV","_jsxDEV","MovieListContainer","div","_c","ListTitle","h2","_c2","ListCards","_c3","MovieList","_s","movieList","setMovieList","type","getData","fetch","then","res","json","data","results","children","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","id","_c4","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/imdb/IMDB-clone-ReactApp/src/components/movieList/movieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Cards from \"../cards/card\";\r\n\r\nconst MovieListContainer = styled.div`\r\n  padding: 0 1rem 3rem 1rem;\r\n\r\n  @media (min-width: 768px) {\r\n    padding: 0 3rem 3rem 3rem;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h2`\r\n  font-size: 1.75rem;\r\n  margin: 2.5rem;\r\n`;\r\n\r\nconst ListCards = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MovieList = () => {\r\n  const [movieList, setMovieList] = useState([]);\r\n  const { type } = useParams();\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [type]);\r\n\r\n  const getData = () => {\r\n    fetch(`https://api.themoviedb.org/3/movie/${type ? type : \"popular\"}?api_key=4e44d9029b1270a757cddc766a1bcb63&language=en-US`)\r\n      .then((res) => res.json())\r\n      .then((data) => setMovieList(data.results));\r\n  };\r\n\r\n  return (\r\n    <MovieListContainer>\r\n      <ListTitle>{(type ? type : \"POPULAR\").toUpperCase()}</ListTitle>\r\n      <ListCards>\r\n        {movieList.map((movie) => (\r\n          <Cards key={movie.id} movie={movie} />\r\n        ))}\r\n      </ListCards>\r\n    </MovieListContainer>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,kBAAkB,GAAGL,MAAM,CAACM,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,kBAAkB;AAQxB,MAAMG,SAAS,GAAGR,MAAM,CAACS,EAAG;AAC5B;AACA;AACA,CAAC;AAACC,GAAA,GAHIF,SAAS;AAKf,MAAMG,SAAS,GAAGX,MAAM,CAACM,GAAI;AAC7B;AACA;AACA;AACA,CAAC;AAACM,GAAA,GAJID,SAAS;AAMf,MAAME,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEkB;EAAK,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAE5BH,SAAS,CAAC,MAAM;IACdoB,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBC,KAAK,CAAE,sCAAqCF,IAAI,GAAGA,IAAI,GAAG,SAAU,0DAAyD,CAAC,CAC3HG,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKP,YAAY,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEpB,OAAA,CAACC,kBAAkB;IAAAoB,QAAA,gBACjBrB,OAAA,CAACI,SAAS;MAAAiB,QAAA,EAAE,CAACR,IAAI,GAAGA,IAAI,GAAG,SAAS,EAAES,WAAW,CAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAChE1B,OAAA,CAACO,SAAS;MAAAc,QAAA,EACPV,SAAS,CAACgB,GAAG,CAAEC,KAAK,iBACnB5B,OAAA,CAACF,KAAK;QAAgB8B,KAAK,EAAEA;MAAM,GAAvBA,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB,CAAC;AAAChB,EAAA,CAxBID,SAAS;EAAA,QAEIZ,SAAS;AAAA;AAAAiC,GAAA,GAFtBrB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAN,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAzB,GAAA;AAAAyB,YAAA,CAAAvB,GAAA;AAAAuB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}